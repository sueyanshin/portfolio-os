  let buildArgsList;

// `modulePromise` is a promise to the `WebAssembly.module` object to be
//   instantiated.
// `importObjectPromise` is a promise to an object that contains any additional
//   imports needed by the module that aren't provided by the standard runtime.
//   The fields on this object will be merged into the importObject with which
//   the module will be instantiated.
// This function returns a promise to the instantiated module.
export const instantiate = async (modulePromise, importObjectPromise) => {
    let dartInstance;

      function stringFromDartString(string) {
        const totalLength = dartInstance.exports.$stringLength(string);
        let result = '';
        let index = 0;
        while (index < totalLength) {
          let chunkLength = Math.min(totalLength - index, 0xFFFF);
          const array = new Array(chunkLength);
          for (let i = 0; i < chunkLength; i++) {
              array[i] = dartInstance.exports.$stringRead(string, index++);
          }
          result += String.fromCharCode(...array);
        }
        return result;
    }

    function stringToDartString(string) {
        const length = string.length;
        let range = 0;
        for (let i = 0; i < length; i++) {
            range |= string.codePointAt(i);
        }
        if (range < 256) {
            const dartString = dartInstance.exports.$stringAllocate1(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite1(dartString, i, string.codePointAt(i));
            }
            return dartString;
        } else {
            const dartString = dartInstance.exports.$stringAllocate2(length);
            for (let i = 0; i < length; i++) {
                dartInstance.exports.$stringWrite2(dartString, i, string.charCodeAt(i));
            }
            return dartString;
        }
    }

      // Converts a Dart List to a JS array. Any Dart objects will be converted, but
    // this will be cheap for JSValues.
    function arrayFromDartList(constructor, list) {
        const length = dartInstance.exports.$listLength(list);
        const array = new constructor(length);
        for (let i = 0; i < length; i++) {
            array[i] = dartInstance.exports.$listRead(list, i);
        }
        return array;
    }

    buildArgsList = function(list) {
        const dartList = dartInstance.exports.$makeStringList();
        for (let i = 0; i < list.length; i++) {
            dartInstance.exports.$listAdd(dartList, stringToDartString(list[i]));
        }
        return dartList;
    }

    // A special symbol attached to functions that wrap Dart functions.
    const jsWrappedDartFunctionSymbol = Symbol("JSWrappedDartFunction");

    function finalizeWrapper(dartFunction, wrapped) {
        wrapped.dartFunction = dartFunction;
        wrapped[jsWrappedDartFunctionSymbol] = true;
        return wrapped;
    }

    // Imports
    const dart2wasm = {

  _1565: (x0,x1) => x0.matchMedia(x1),
_12331: x0 => x0.matches,
_3332: () => globalThis.window,
_3414: x0 => x0.navigator,
_3905: x0 => x0.platform,
_1699: s => stringToDartString(JSON.stringify(stringFromDartString(s))),
_1700: s => console.log(stringFromDartString(s)),
_1602: o => o === undefined,
_1603: o => typeof o === 'boolean',
_1604: o => typeof o === 'number',
_1606: o => typeof o === 'string',
_1609: o => o instanceof Int8Array,
_1610: o => o instanceof Uint8Array,
_1611: o => o instanceof Uint8ClampedArray,
_1612: o => o instanceof Int16Array,
_1613: o => o instanceof Uint16Array,
_1614: o => o instanceof Int32Array,
_1615: o => o instanceof Uint32Array,
_1616: o => o instanceof Float32Array,
_1617: o => o instanceof Float64Array,
_1618: o => o instanceof ArrayBuffer,
_1619: o => o instanceof DataView,
_1620: o => o instanceof Array,
_1621: o => typeof o === 'function' && o[jsWrappedDartFunctionSymbol] === true,
_1623: o => {
            const proto = Object.getPrototypeOf(o);
            return proto === Object.prototype || proto === null;
          },
_1624: o => o instanceof RegExp,
_1625: (l, r) => l === r,
_1626: o => o,
_1627: o => o,
_1628: o => o,
_1629: b => !!b,
_1630: o => o.length,
_1633: (o, i) => o[i],
_1634: f => f.dartFunction,
_1635: l => arrayFromDartList(Int8Array, l),
_1636: l => arrayFromDartList(Uint8Array, l),
_1637: l => arrayFromDartList(Uint8ClampedArray, l),
_1638: l => arrayFromDartList(Int16Array, l),
_1639: l => arrayFromDartList(Uint16Array, l),
_1640: l => arrayFromDartList(Int32Array, l),
_1641: l => arrayFromDartList(Uint32Array, l),
_1642: l => arrayFromDartList(Float32Array, l),
_1643: l => arrayFromDartList(Float64Array, l),
_1644: (data, length) => {
          const view = new DataView(new ArrayBuffer(length));
          for (let i = 0; i < length; i++) {
              view.setUint8(i, dartInstance.exports.$byteDataGetUint8(data, i));
          }
          return view;
        },
_1645: l => arrayFromDartList(Array, l),
_1646: stringFromDartString,
_1647: stringToDartString,
_1648: () => ({}),
_1649: () => [],
_1651: () => globalThis,
_1652: (constructor, args) => {
      const factoryFunction = constructor.bind.apply(
          constructor, [null, ...args]);
      return new factoryFunction();
    },
_1653: (o, p) => p in o,
_1654: (o, p) => o[p],
_1655: (o, p, v) => o[p] = v,
_1656: (o, m, a) => o[m].apply(o, a),
_1659: (p, s, f) => p.then(s, f),
_1661: s => {
      let jsString = stringFromDartString(s);
      if (/[[\]{}()*+?.\\^$|]/.test(jsString)) {
          jsString = jsString.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');
      }
      return stringToDartString(jsString);
    },
_1591: (s, m) => {
          try {
            return new RegExp(s, m);
          } catch (e) {
            return String(e);
          }
        },
_1592: (x0,x1) => x0.exec(x1),
_1593: (x0,x1) => x0.test(x1),
_1594: (x0,x1) => x0.exec(x1),
_1595: (x0,x1) => x0.exec(x1),
_1596: x0 => x0.pop(),
_1599: (x0,x1) => x0[x1],
_1600: (x0,x1,x2) => x0[x1] = x2,
_1650: l => new Array(l),
_1658: o => String(o),
_1660: x0 => new Array(x0),
_1663: x0 => x0.index,
_1665: x0 => x0.length,
_1669: x0 => x0.flags,
_1670: x0 => x0.multiline,
_1671: x0 => x0.ignoreCase,
_1672: x0 => x0.unicode,
_1673: x0 => x0.dotAll,
_1674: (x0,x1) => x0.lastIndex = x1,
_1717: (a, i) => a.push(i),
_1718: (a, i) => a.splice(i, 1)[0],
_1721: a => a.pop(),
_1722: (a, i) => a.splice(i, 1),
_1728: a => a.length,
_1730: (a, i) => a[i],
_1731: (a, i, v) => a[i] = v,
_1733: a => a.join(''),
_1734: (s, i) => s.charCodeAt(i),
_1735: (a, b) => a + b,
_1736: (o, a, b) => o.replace(a, b),
_1738: (s, t) => s.split(t),
_1739: (o, s, i) => o.substring(s, i),
_1740: s => s.toLowerCase(),
_1741: s => s.toUpperCase(),
_1742: s => s.trim(),
_1743: s => s.trimLeft(),
_1744: s => s.trimRight(),
_1746: (s, p, i) => s.indexOf(p, i),
_1747: (s, p, i) => s.lastIndexOf(p, i),
_1748: s => s.length,
_1749: (s, i) => s[i],
_1751: o => o.buffer,
_1752: o => o.byteLength,
_1753: o => o.byteOffset,
_1754: o => o.BYTES_PER_ELEMENT,
_1755: o => o.length,
_1756: (b, o) => new DataView(b, o),
_1757: (b, o, l) => new DataView(b, o, l),
_1759: (b, o, e) => b.getFloat64(o, e),
_1761: (b, o, e) => b.getInt32(o, e),
_1762: (b, o, e) => b.getBigInt64(o, e),
_1764: (b, o, e) => b.getUint16(o, e),
_1765: (b, o, e) => b.getUint32(o, e),
_1767: (b, o) => b.getUint8(o),
_1778: (o, i) => o[i],
_1779: (o, i, v) => o[i] = v,
_1780: (b, o) => new Uint8Array(b, o),
_1781: (b, o, l) => new Uint8Array(b, o, l),
_1782: (a, s, p) => new Uint8Array(a.subarray(s, p)),
_1795: (b, o, l) => new Int32Array(b, o, l),
_1797: (o, i) => o[i],
_1798: (o, i, v) => o[i] = v,
_1801: (b, o, l) => new BigInt64Array(b, o, l),
_1803: (o, i) => o[i],
_1804: (o, i, v) => o[i] = v,
_1805: (b, o, l) => new Float32Array(b, o, l),
_1807: (b, o, l) => new Float64Array(b, o, l),
_1809: (s, k, e) => s.subarray(k, e),
_1810: (t, s, i) => t.set(s, i),
_1706: (ms, c) =>
              setTimeout(() => dartInstance.exports.$invokeCallback(c),ms),
_1707: (handle) => clearTimeout(handle),
_1708: (ms, c) =>
          setInterval(() => dartInstance.exports.$invokeCallback(c), ms),
_1709: (handle) => clearInterval(handle),
_1711: () => Date.now(),
_1710: (c) =>
              queueMicrotask(() => dartInstance.exports.$invokeCallback(c)),
_1578: f => finalizeWrapper(f,x0 => dartInstance.exports._1578(f,x0)),
_1579: f => finalizeWrapper(f,x0 => dartInstance.exports._1579(f,x0)),
_1701: (o, t) => o instanceof t,
_1703: f => finalizeWrapper(f,x0 => dartInstance.exports._1703(f,x0)),
_1704: f => finalizeWrapper(f,x0 => dartInstance.exports._1704(f,x0)),
_1705: o => Object.keys(o),
_1811: s => stringToDartString(stringFromDartString(s).toUpperCase()),
_1812: s => stringToDartString(stringFromDartString(s).toLowerCase()),
_1675: v => stringToDartString(v.toString()),
_1676: (d, digits) => stringToDartString(d.toFixed(digits)),
_1679: (d, precision) => stringToDartString(d.toPrecision(precision)),
_1680: o => new WeakRef(o),
_1681: r => r.deref(),
_1686: Date.now,
_1688: s => new Date(s * 1000).getTimezoneOffset() * 60 ,
_1689: s => {
      const jsSource = stringFromDartString(s);
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(jsSource)) {
        return NaN;
      }
      return parseFloat(jsSource);
    },
_1690: () => {
          let stackString = new Error().stack.toString();
          let userStackString = stackString.split('\n').slice(3).join('\n');
          return stringToDartString(userStackString);
        },
_1691: () => typeof dartUseDateNowForTicks !== "undefined",
_1692: () => 1000 * performance.now(),
_1693: () => Date.now(),
_1694: () => {
      // On browsers return `globalThis.location.href`
      if (globalThis.location != null) {
        return stringToDartString(globalThis.location.href);
      }
      return null;
    },
_1695: () => {
        return typeof process != undefined &&
               Object.prototype.toString.call(process) == "[object process]" &&
               process.platform == "win32"
      },
_1696: () => new WeakMap(),
_1697: (map, o) => map.get(o),
_1698: (map, o, v) => map.set(o, v),
_14: () => ({}),
_15: (x0,x1) => x0.append(x1),
_16: x0 => x0.save(),
_17: x0 => x0.remove(),
_18: x0 => x0.restore(),
_19: x0 => x0.save(),
_20: x0 => x0.save(),
_21: x0 => x0.restore(),
_22: x0 => x0.beginPath(),
_24: x0 => x0.beginPath(),
_32: x0 => x0.beginPath(),
_33: x0 => x0.closePath(),
_34: x0 => x0.beginPath(),
_35: x0 => x0.beginPath(),
_36: x0 => x0.closePath(),
_37: x0 => x0.beginPath(),
_38: x0 => x0.beginPath(),
_39: x0 => x0.save(),
_40: x0 => x0.restore(),
_41: x0 => x0.remove(),
_42: x0 => x0.save(),
_43: x0 => x0.restore(),
_44: x0 => x0.stroke(),
_45: x0 => x0.stroke(),
_46: (x0,x1) => x0.drawPaint(x1),
_47: (x0,x1,x2) => x0.drawPath(x1,x2),
_48: (x0,x1) => x0.drawPicture(x1),
_50: x0 => x0.restore(),
_51: x0 => ({locateFile: x0}),
_52: (x0,x1) => ({antialias: x0,majorVersion: x1}),
_53: () => new window.flutterCanvasKit.Paint(),
_56: () => new window.flutterCanvasKit.Path(),
_58: (x0,x1,x2) => new window.flutterCanvasKit.ContourMeasureIter(x0,x1,x2),
_60: () => new window.flutterCanvasKit.PictureRecorder(),
_61: () => ({}),
_62: () => ({}),
_64: () => ({}),
_67: () => ({}),
_68: x0 => new window.flutterCanvasKit.Font(x0),
_69: (x0,x1) => ({ambient: x0,spot: x1}),
_71: (x0,x1,x2,x3,x4) => ({width: x0,height: x1,colorType: x2,alphaType: x3,colorSpace: x4}),
_78: (x0,x1,x2) => x0.MakeCompose(x1,x2),
_83: x0 => x0.remove(),
_91: (x0,x1,x2) => x0.insertBefore(x1,x2),
_93: (x0,x1) => x0.append(x1),
_94: (x0,x1) => x0.append(x1),
_97: (x0,x1) => x0.append(x1),
_101: x0 => x0.delete(),
_102: x0 => x0.delete(),
_103: x0 => x0.Make(),
_104: x0 => x0.Make(),
_105: x0 => x0.enableFontFallback(),
_106: (x0,x1) => x0.setDefaultFontManager(x1),
_107: x0 => x0.delete(),
_108: x0 => x0.clone(),
_110: x0 => x0.makeImageAtCurrentFrame(),
_111: x0 => x0.delete(),
_112: (x0,x1) => x0.setBlendMode(x1),
_113: (x0,x1) => x0.setStyle(x1),
_114: (x0,x1) => x0.setStrokeCap(x1),
_115: (x0,x1) => x0.setStrokeJoin(x1),
_116: (x0,x1) => x0.setColorFilter(x1),
_117: (x0,x1) => x0.setShader(x1),
_118: (x0,x1) => x0.setMaskFilter(x1),
_119: (x0,x1) => x0.setShader(x1),
_122: (x0,x1) => x0.setFillType(x1),
_125: (x0,x1) => x0.setFillType(x1),
_126: (x0,x1) => x0.setFillType(x1),
_128: x0 => x0.close(),
_129: x0 => x0.reset(),
_130: x0 => x0.copy(),
_132: x0 => x0.copy(),
_133: x0 => x0.next(),
_135: x0 => x0.finishRecordingAsPicture(),
_136: x0 => x0.delete(),
_137: (x0,x1) => x0.prepend(x1),
_138: (x0,x1) => x0.append(x1),
_139: (x0,x1) => x0.transferFromImageBitmap(x1),
_141: x0 => x0.remove(),
_142: x0 => x0.remove(),
_143: x0 => x0.releaseResourcesAndAbandonContext(),
_144: x0 => x0.delete(),
_145: x0 => x0.stopPropagation(),
_146: x0 => x0.preventDefault(),
_147: x0 => x0.preventDefault(),
_148: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_149: (x0,x1) => x0.MakeSWCanvasSurface(x1),
_150: x0 => x0.getCanvas(),
_151: x0 => x0.flush(),
_152: x0 => x0.dispose(),
_153: (x0,x1) => x0.ParagraphStyle(x1),
_154: (x0,x1) => x0.TextStyle(x1),
_155: (x0,x1,x2) => x0.MakeFromFontCollection(x1,x2),
_156: x0 => x0.build(),
_157: x0 => x0.delete(),
_158: x0 => x0.pop(),
_159: (x0,x1,x2,x3) => x0.pushPaintStyle(x1,x2,x3),
_160: (x0,x1) => x0.pushStyle(x1),
_161: x0 => x0.focus(),
_162: x0 => x0.select(),
_163: (x0,x1) => x0.append(x1),
_164: x0 => x0.remove(),
_165: x0 => x0.unlock(),
_170: x0 => x0.getReader(),
_172: (x0,x1) => new FontFace(x0,x1),
_173: (x0,x1,x2) => new FontFace(x0,x1,x2),
_178: x0 => new Blob(x0),
_180: x0 => new MutationObserver(x0),
_197: (x0,x1) => new OffscreenCanvas(x0,x1),
_199: (x0,x1,x2) => x0.addEventListener(x1,x2),
_200: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_203: x0 => new ResizeObserver(x0),
_205: x0 => ({createScriptURL: x0}),
_206: (x0,x1) => new Intl.Segmenter(x0,x1),
_207: x0 => x0.next(),
_208: (x0,x1) => new Intl.v8BreakIterator(x0,x1),
_210: x0 => x0.remove(),
_211: (x0,x1) => x0.append(x1),
_212: (x0,x1) => x0.appendChild(x1),
_213: (x0,x1) => x0.appendChild(x1),
_214: (x0,x1) => x0.append(x1),
_215: (x0,x1) => x0.append(x1),
_216: (x0,x1) => x0.append(x1),
_217: (x0,x1) => x0.appendChild(x1),
_223: x0 => x0.remove(),
_224: (x0,x1) => x0.append(x1),
_225: (x0,x1) => x0.append(x1),
_226: x0 => x0.remove(),
_227: (x0,x1) => x0.append(x1),
_228: (x0,x1) => x0.append(x1),
_231: x0 => x0.save(),
_232: x0 => x0.restore(),
_233: (x0,x1) => x0.append(x1),
_234: (x0,x1) => x0.append(x1),
_235: (x0,x1) => x0.append(x1),
_236: (x0,x1) => x0.append(x1),
_238: (x0,x1) => x0.append(x1),
_239: (x0,x1) => x0.append(x1),
_240: x0 => x0.remove(),
_241: (x0,x1) => x0.append(x1),
_242: x0 => x0.remove(),
_243: x0 => x0.remove(),
_268: (x0,x1) => x0.append(x1),
_269: (x0,x1) => x0.append(x1),
_270: (x0,x1) => x0.append(x1),
_272: (x0,x1) => x0.append(x1),
_282: x0 => x0.remove(),
_283: (x0,x1) => x0.append(x1),
_284: (x0,x1) => x0.append(x1),
_285: (x0,x1) => x0.append(x1),
_286: (x0,x1) => x0.append(x1),
_287: (x0,x1) => x0.append(x1),
_288: (x0,x1) => x0.append(x1),
_289: (x0,x1) => x0.append(x1),
_290: (x0,x1,x2) => x0.insertBefore(x1,x2),
_291: x0 => x0.close(),
_292: (x0,x1,x2,x3,x4) => ({type: x0,data: x1,premultiplyAlpha: x2,colorSpaceConversion: x3,preferAnimation: x4}),
_293: x0 => new window.ImageDecoder(x0),
_294: x0 => x0.close(),
_295: x0 => ({frameIndex: x0}),
_296: (x0,x1) => x0.decode(x1),
_297: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._297(f,arguments.length,x0) }),
_298: f => finalizeWrapper(f,() => dartInstance.exports._298(f)),
_299: (x0,x1) => ({initializeEngine: x0,autoStart: x1}),
_300: f => finalizeWrapper(f, function(x0) { return dartInstance.exports._300(f,arguments.length,x0) }),
_301: x0 => ({runApp: x0}),
_304: x0 => x0.preventDefault(),
_305: (x0,x1) => x0.addListener(x1),
_306: (x0,x1) => x0.removeListener(x1),
_307: x0 => x0.disconnect(),
_308: (x0,x1) => x0.addListener(x1),
_309: (x0,x1) => x0.removeListener(x1),
_310: (x0,x1) => x0.append(x1),
_311: x0 => x0.remove(),
_312: (x0,x1) => x0.append(x1),
_316: x0 => x0.preventDefault(),
_317: (x0,x1) => x0.append(x1),
_318: x0 => x0.remove(),
_319: x0 => x0.preventDefault(),
_320: x0 => x0.preventDefault(),
_321: x0 => x0.preventDefault(),
_322: (x0,x1) => x0.append(x1),
_323: x0 => x0.remove(),
_324: x0 => x0.beginPath(),
_333: (x0,x1) => x0.append(x1),
_334: (x0,x1) => x0.append(x1),
_335: (x0,x1) => x0.append(x1),
_336: x0 => x0.remove(),
_337: x0 => x0.blur(),
_338: x0 => x0.focus(),
_339: x0 => x0.blur(),
_340: x0 => x0.remove(),
_341: x0 => x0.remove(),
_342: (x0,x1) => x0.append(x1),
_343: (x0,x1) => x0.append(x1),
_344: x0 => x0.remove(),
_345: (x0,x1) => x0.append(x1),
_346: (x0,x1) => x0.append(x1),
_347: (x0,x1,x2) => x0.insertBefore(x1,x2),
_348: (x0,x1) => x0.append(x1),
_349: (x0,x1,x2) => x0.insertBefore(x1,x2),
_350: x0 => x0.remove(),
_351: x0 => x0.remove(),
_352: x0 => x0.remove(),
_353: x0 => x0.remove(),
_354: (x0,x1) => x0.append(x1),
_355: x0 => x0.remove(),
_356: x0 => x0.getBoundingClientRect(),
_357: x0 => x0.remove(),
_358: x0 => x0.preventDefault(),
_359: x0 => x0.blur(),
_361: x0 => x0.focus(),
_362: x0 => x0.remove(),
_363: x0 => x0.focus(),
_364: x0 => x0.focus(),
_365: x0 => x0.blur(),
_366: x0 => x0.remove(),
_367: (x0,x1) => x0.append(x1),
_368: x0 => x0.clear(),
_369: (x0,x1) => x0.add(x1),
_370: (x0,x1) => x0.add(x1),
_371: (x0,x1) => x0.appendChild(x1),
_372: x0 => x0.remove(),
_373: (x0,x1) => x0.append(x1),
_374: (x0,x1) => x0.append(x1),
_375: x0 => x0.getBoundingClientRect(),
_376: x0 => x0.getBoundingClientRect(),
_377: x0 => x0.remove(),
_378: (x0,x1) => x0.append(x1),
_379: (x0,x1) => x0.append(x1),
_380: x0 => x0.remove(),
_381: (x0,x1) => x0.append(x1),
_382: (x0,x1,x2) => x0.insertBefore(x1,x2),
_383: (x0,x1) => x0.append(x1),
_384: x0 => x0.focus(),
_385: x0 => x0.focus(),
_386: x0 => x0.focus(),
_387: x0 => x0.focus(),
_388: x0 => x0.focus(),
_389: (x0,x1) => x0.append(x1),
_390: x0 => x0.focus(),
_391: x0 => x0.blur(),
_392: x0 => x0.remove(),
_394: x0 => x0.preventDefault(),
_395: x0 => x0.focus(),
_396: x0 => x0.preventDefault(),
_397: x0 => x0.preventDefault(),
_398: x0 => x0.preventDefault(),
_399: x0 => x0.focus(),
_400: x0 => x0.focus(),
_401: (x0,x1) => x0.append(x1),
_402: x0 => x0.focus(),
_403: x0 => x0.focus(),
_404: x0 => x0.focus(),
_405: x0 => x0.focus(),
_406: (x0,x1) => x0.observe(x1),
_407: x0 => x0.disconnect(),
_408: (x0,x1) => x0.appendChild(x1),
_410: (x0,x1) => x0.append(x1),
_412: x0 => x0.remove(),
_413: (x0,x1) => x0.append(x1),
_417: x0 => globalThis.window.flutterCanvasKit = x0,
_418: () => globalThis.window.flutterCanvasKit,
_419: x0 => x0.BlendMode,
_420: x0 => x0.PaintStyle,
_421: x0 => x0.StrokeCap,
_422: x0 => x0.StrokeJoin,
_423: x0 => x0.BlurStyle,
_424: x0 => x0.TileMode,
_425: x0 => x0.FilterMode,
_426: x0 => x0.MipmapMode,
_427: x0 => x0.FillType,
_428: x0 => x0.AlphaType,
_429: x0 => x0.ColorType,
_431: x0 => x0.ClipOp,
_434: x0 => x0.RectHeightStyle,
_435: x0 => x0.RectWidthStyle,
_437: x0 => x0.TextAlign,
_438: x0 => x0.TextHeightBehavior,
_439: x0 => x0.TextDirection,
_440: x0 => x0.FontWeight,
_441: x0 => x0.FontSlant,
_442: (x0,x1) => x0.MakeAnimatedImageFromEncoded(x1),
_443: x0 => x0.Shader,
_444: x0 => x0.MaskFilter,
_445: x0 => x0.ColorFilter,
_448: (x0,x1) => x0.computeTonalColors(x1),
_450: x0 => x0.ParagraphBuilder,
_458: x0 => x0.NoDecoration,
_459: x0 => x0.UnderlineDecoration,
_460: x0 => x0.OverlineDecoration,
_461: x0 => x0.LineThroughDecoration,
_462: x0 => x0.DecorationStyle,
_463: x0 => x0.TextBaseline,
_465: x0 => x0.FontMgr,
_466: x0 => x0.TypefaceFontProvider,
_467: x0 => x0.FontCollection,
_468: x0 => x0.Typeface,
_469: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_470: (x0,x1,x2) => x0.GetWebGLContext(x1,x2),
_472: (x0,x1) => x0.MakeGrContext(x1),
_473: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeOnScreenGLSurface(x1,x2,x3,x4,x5,x6),
_478: (x0,x1,x2) => x0.MakeLazyImageFromTextureSource(x1,x2),
_480: x0 => globalThis.window.CanvasKitInit(x0),
_481: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._481(f,x0,x1)),
_482: () => globalThis.window.flutterCanvasKit.ColorSpace.SRGB,
_490: (x0,x1) => x0.setResourceCacheLimitBytes(x1),
_493: x0 => x0.Upright,
_494: x0 => x0.Italic,
_496: x0 => x0.Thin,
_497: x0 => x0.ExtraLight,
_498: x0 => x0.Light,
_499: x0 => x0.Normal,
_500: x0 => x0.Medium,
_501: x0 => x0.SemiBold,
_502: x0 => x0.Bold,
_503: x0 => x0.ExtraBold,
_504: x0 => x0.ExtraBlack,
_508: x0 => x0.value,
_509: x0 => x0.RTL,
_510: x0 => x0.LTR,
_511: x0 => x0.value,
_512: x0 => x0.Left,
_513: x0 => x0.Right,
_514: x0 => x0.Center,
_515: x0 => x0.Justify,
_516: x0 => x0.Start,
_517: x0 => x0.End,
_519: x0 => x0.All,
_520: x0 => x0.DisableFirstAscent,
_521: x0 => x0.DisableLastDescent,
_522: x0 => x0.DisableAll,
_524: x0 => x0.Tight,
_525: x0 => x0.Max,
_526: x0 => x0.IncludeLineSpacingMiddle,
_527: x0 => x0.IncludeLineSpacingTop,
_528: x0 => x0.IncludeLineSpacingBottom,
_529: x0 => x0.Strut,
_531: x0 => x0.Tight,
_532: x0 => x0.Max,
_542: x0 => x0.Difference,
_543: x0 => x0.Intersect,
_545: x0 => x0.Winding,
_546: x0 => x0.EvenOdd,
_554: x0 => x0.Normal,
_555: x0 => x0.Solid,
_556: x0 => x0.Outer,
_557: x0 => x0.Inner,
_559: x0 => x0.Butt,
_560: x0 => x0.Round,
_561: x0 => x0.Square,
_563: x0 => x0.Stroke,
_564: x0 => x0.Fill,
_566: x0 => x0.Clear,
_567: x0 => x0.Src,
_568: x0 => x0.Dst,
_569: x0 => x0.SrcOver,
_570: x0 => x0.DstOver,
_571: x0 => x0.SrcIn,
_572: x0 => x0.DstIn,
_573: x0 => x0.SrcOut,
_574: x0 => x0.DstOut,
_575: x0 => x0.SrcATop,
_576: x0 => x0.DstATop,
_577: x0 => x0.Xor,
_578: x0 => x0.Plus,
_579: x0 => x0.Modulate,
_580: x0 => x0.Screen,
_581: x0 => x0.Overlay,
_582: x0 => x0.Darken,
_583: x0 => x0.Lighten,
_584: x0 => x0.ColorDodge,
_585: x0 => x0.ColorBurn,
_586: x0 => x0.HardLight,
_587: x0 => x0.SoftLight,
_588: x0 => x0.Difference,
_589: x0 => x0.Exclusion,
_590: x0 => x0.Multiply,
_591: x0 => x0.Hue,
_592: x0 => x0.Saturation,
_593: x0 => x0.Color,
_594: x0 => x0.Luminosity,
_596: x0 => x0.Miter,
_597: x0 => x0.Round,
_598: x0 => x0.Bevel,
_600: x0 => x0.Clamp,
_601: x0 => x0.Repeat,
_602: x0 => x0.Mirror,
_603: x0 => x0.Decal,
_605: x0 => x0.Nearest,
_606: x0 => x0.Linear,
_608: x0 => x0.None,
_610: x0 => x0.Linear,
_613: x0 => x0.Premul,
_619: x0 => x0.RGBA_8888,
_628: x0 => x0.getFrameCount(),
_629: x0 => x0.getRepetitionCount(),
_630: x0 => x0.currentFrameDuration(),
_631: x0 => x0.decodeNextFrame(),
_640: x0 => x0.width(),
_641: x0 => x0.height(),
_647: (x0,x1) => x0.isAliasOf(x1),
_650: (x0,x1,x2,x3,x4,x5,x6) => x0.MakeLinearGradient(x1,x2,x3,x4,x5,x6),
_651: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.MakeRadialGradient(x1,x2,x3,x4,x5,x6,x7),
_655: (x0,x1,x2,x3) => x0.MakeBlur(x1,x2,x3),
_660: (x0,x1) => x0.setStrokeWidth(x1),
_663: (x0,x1) => x0.setAntiAlias(x1),
_664: (x0,x1) => x0.setColorInt(x1),
_669: (x0,x1) => x0.setStrokeMiter(x1),
_675: (x0,x1) => x0.MakeMatrix(x1),
_690: () => globalThis.Float32Array,
_692: (x0,x1) => globalThis.window.flutterCanvasKit.Malloc(x0,x1),
_696: x0 => x0.toTypedArray(),
_702: (x0,x1,x2,x3) => x0.addOval(x1,x2,x3),
_703: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11) => x0.addPath(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11),
_705: (x0,x1,x2) => x0.addRRect(x1,x2),
_706: (x0,x1) => x0.addRect(x1),
_707: (x0,x1,x2,x3,x4) => x0.arcToOval(x1,x2,x3,x4),
_712: (x0,x1,x2) => x0.contains(x1,x2),
_713: (x0,x1,x2,x3,x4,x5,x6) => x0.cubicTo(x1,x2,x3,x4,x5,x6),
_714: x0 => x0.getBounds(),
_716: (x0,x1,x2) => x0.lineTo(x1,x2),
_717: (x0,x1,x2) => x0.moveTo(x1,x2),
_718: (x0,x1,x2,x3,x4) => x0.quadTo(x1,x2,x3,x4),
_729: x0 => x0.isEmpty(),
_732: (x0,x1,x2,x3,x4,x5,x6,x7,x8,x9) => x0.transform(x1,x2,x3,x4,x5,x6,x7,x8,x9),
_738: (x0,x1,x2,x3) => x0.getSegment(x1,x2,x3),
_739: (x0,x1) => x0.getPosTan(x1),
_741: x0 => x0.length(),
_743: (x0,x1,x2) => x0.beginRecording(x1,x2),
_747: (x0,x1) => x0.clear(x1),
_748: (x0,x1,x2,x3) => x0.clipPath(x1,x2,x3),
_749: (x0,x1,x2,x3) => x0.clipRRect(x1,x2,x3),
_750: (x0,x1,x2,x3) => x0.clipRect(x1,x2,x3),
_752: (x0,x1,x2,x3,x4,x5) => x0.drawArc(x1,x2,x3,x4,x5),
_755: (x0,x1,x2,x3,x4) => x0.drawCircle(x1,x2,x3,x4),
_757: (x0,x1,x2,x3) => x0.drawDRRect(x1,x2,x3),
_761: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectCubic(x1,x2,x3,x4,x5,x6),
_762: (x0,x1,x2,x3,x4,x5,x6) => x0.drawImageRectOptions(x1,x2,x3,x4,x5,x6),
_765: (x0,x1,x2) => x0.drawOval(x1,x2),
_770: (x0,x1,x2) => x0.drawRRect(x1,x2),
_771: (x0,x1,x2) => x0.drawRect(x1,x2),
_773: (x0,x1,x2,x3,x4,x5,x6,x7) => x0.drawShadow(x1,x2,x3,x4,x5,x6,x7),
_775: x0 => x0.save(),
_777: (x0,x1,x2,x3,x4) => x0.saveLayer(x1,x2,x3,x4),
_781: (x0,x1,x2,x3) => x0.rotate(x1,x2,x3),
_782: (x0,x1,x2) => x0.scale(x1,x2),
_785: (x0,x1) => x0.concat(x1),
_786: (x0,x1,x2) => x0.translate(x1,x2),
_790: (x0,x1,x2,x3) => x0.drawParagraph(x1,x2,x3),
_792: x0 => x0.cullRect(),
_795: (x0,x1) => x0.addText(x1),
_800: x0 => x0.getText(),
_802: (x0,x1) => x0.setWordsUtf16(x1),
_804: (x0,x1) => x0.setGraphemeBreaksUtf16(x1),
_806: (x0,x1) => x0.setLineBreaksUtf16(x1),
_809: (x0,x1) => x0.textAlign = x1,
_810: (x0,x1) => x0.textDirection = x1,
_811: (x0,x1) => x0.heightMultiplier = x1,
_812: (x0,x1) => x0.textHeightBehavior = x1,
_814: (x0,x1) => x0.ellipsis = x1,
_815: (x0,x1) => x0.textStyle = x1,
_817: (x0,x1) => x0.replaceTabCharacters = x1,
_818: (x0,x1) => x0.applyRoundingHack = x1,
_819: x0 => x0.Solid,
_820: x0 => x0.Double,
_821: x0 => x0.Dotted,
_822: x0 => x0.Dashed,
_823: x0 => x0.Wavy,
_825: x0 => x0.Alphabetic,
_826: x0 => x0.Ideographic,
_835: (x0,x1) => x0.backgroundColor = x1,
_836: (x0,x1) => x0.color = x1,
_837: (x0,x1) => x0.foregroundColor = x1,
_838: (x0,x1) => x0.decoration = x1,
_839: (x0,x1) => x0.decorationThickness = x1,
_840: (x0,x1) => x0.decorationColor = x1,
_841: (x0,x1) => x0.decorationStyle = x1,
_842: (x0,x1) => x0.textBaseline = x1,
_843: (x0,x1) => x0.fontSize = x1,
_844: (x0,x1) => x0.letterSpacing = x1,
_845: (x0,x1) => x0.wordSpacing = x1,
_846: (x0,x1) => x0.heightMultiplier = x1,
_847: (x0,x1) => x0.halfLeading = x1,
_849: (x0,x1) => x0.fontFamilies = x1,
_850: (x0,x1) => x0.fontStyle = x1,
_853: (x0,x1) => x0.fontVariations = x1,
_862: (x0,x1) => x0.weight = x1,
_863: (x0,x1) => x0.slant = x1,
_869: (x0,x1) => x0.axis = x1,
_870: (x0,x1) => x0.value = x1,
_872: (x0,x1) => x0.getGlyphIDs(x1),
_873: (x0,x1,x2,x3) => x0.getGlyphBounds(x1,x2,x3),
_874: (x0,x1) => x0.getFamilyName(x1),
_877: (x0,x1,x2) => x0.registerFont(x1,x2),
_894: x0 => x0.rect,
_896: x0 => x0.dir,
_898: x0 => x0.getAlphabeticBaseline(),
_899: x0 => x0.didExceedMaxLines(),
_900: x0 => x0.getHeight(),
_901: x0 => x0.getIdeographicBaseline(),
_904: x0 => x0.getLongestLine(),
_905: x0 => x0.getMaxIntrinsicWidth(),
_906: x0 => x0.getMinIntrinsicWidth(),
_907: x0 => x0.getMaxWidth(),
_908: (x0,x1,x2,x3,x4) => x0.getRectsForRange(x1,x2,x3,x4),
_910: x0 => x0.getRectsForPlaceholders(),
_911: (x0,x1,x2) => x0.getGlyphPositionAtCoordinate(x1,x2),
_914: (x0,x1) => x0.layout(x1),
_916: x0 => x0.affinity,
_917: x0 => x0.pos,
_921: x0 => x0.ambient,
_922: x0 => x0.spot,
_923: (x0,x1) => x0.FromData(x1),
_928: (x0,x1) => x0.MakeFreeTypeFaceFromData(x1),
_930: x0 => x0.isDeleted(),
_955: x0 => globalThis.window.flutterCanvasKit.RuntimeEffect.Make(x0),
_957: (x0,x1) => x0.makeShader(x1),
_958: (x0,x1,x2) => x0.makeShaderWithChildren(x1,x2),
_959: x0 => x0.remove(),
_960: x0 => x0.remove(),
_961: (x0,x1) => x0.appendChild(x1),
_964: () => globalThis.window.flutterConfiguration,
_965: x0 => x0.assetBase,
_966: x0 => x0.canvasKitBaseUrl,
_967: x0 => x0.canvasKitVariant,
_968: x0 => x0.canvasKitForceCpuOnly,
_970: x0 => x0.debugShowSemanticsNodes,
_971: x0 => x0.hostElement,
_972: x0 => x0.nonce,
_973: x0 => x0.renderer,
_974: x0 => x0.useColorEmoji,
_975: () => globalThis.window.flutterWebRenderer,
_978: x0 => x0.console,
_979: x0 => x0.devicePixelRatio,
_980: x0 => x0.document,
_981: x0 => x0.history,
_982: x0 => x0.innerHeight,
_983: x0 => x0.innerWidth,
_984: x0 => x0.location,
_985: x0 => x0.navigator,
_986: x0 => x0.visualViewport,
_987: x0 => x0.performance,
_988: (x0,x1) => x0.fetch(x1),
_990: x0 => x0.URL,
_992: (x0,x1) => x0.dispatchEvent(x1),
_993: (x0,x1) => x0.matchMedia(x1),
_994: (x0,x1) => x0.getComputedStyle(x1),
_996: x0 => x0.screen,
_997: (x0,x1) => x0.requestAnimationFrame(x1),
_998: f => finalizeWrapper(f,x0 => dartInstance.exports._998(f,x0)),
_1001: x0 => x0.trustedTypes,
_1002: (x0,x1) => x0.warn(x1),
_1003: (x0,x1) => x0.error(x1),
_1005: (x0,x1) => x0.debug(x1),
_1006: () => globalThis.window,
_1007: () => globalThis.Intl,
_1008: () => globalThis.Symbol,
_1010: (x0,x1,x2,x3,x4) => globalThis.createImageBitmap(x0,x1,x2,x3,x4),
_1011: x0 => x0.clipboard,
_1012: x0 => x0.maxTouchPoints,
_1013: x0 => x0.vendor,
_1014: x0 => x0.language,
_1015: x0 => x0.platform,
_1016: x0 => x0.userAgent,
_1017: x0 => x0.languages,
_1018: x0 => x0.documentElement,
_1019: (x0,x1) => x0.querySelector(x1),
_1022: (x0,x1) => x0.createElement(x1),
_1024: (x0,x1) => x0.execCommand(x1),
_1026: (x0,x1,x2) => x0.createElementNS(x1,x2),
_1028: (x0,x1) => x0.createTextNode(x1),
_1029: (x0,x1) => x0.createEvent(x1),
_1032: x0 => x0.fonts,
_1033: x0 => x0.head,
_1034: x0 => x0.body,
_1035: (x0,x1) => x0.title = x1,
_1038: x0 => x0.activeElement,
_1040: () => globalThis.document,
_1041: (x0,x1,x2) => x0.addEventListener(x1,x2),
_1042: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1043: (x0,x1,x2,x3) => x0.addEventListener(x1,x2,x3),
_1044: (x0,x1,x2) => x0.removeEventListener(x1,x2),
_1046: (x0,x1,x2,x3) => x0.removeEventListener(x1,x2,x3),
_1048: f => finalizeWrapper(f,x0 => dartInstance.exports._1048(f,x0)),
_1049: x0 => x0.target,
_1051: x0 => x0.timeStamp,
_1052: x0 => x0.type,
_1054: x0 => x0.preventDefault(),
_1058: (x0,x1,x2,x3) => x0.initEvent(x1,x2,x3),
_1063: x0 => x0.firstChild,
_1066: x0 => x0.lastChild,
_1067: (x0,x1) => x0.appendChild(x1),
_1068: x0 => x0.parentElement,
_1070: x0 => x0.parentNode,
_1073: (x0,x1) => x0.removeChild(x1),
_1074: (x0,x1) => x0.removeChild(x1),
_1075: x0 => x0.isConnected,
_1076: (x0,x1) => x0.textContent = x1,
_1077: (x0,x1) => x0.cloneNode(x1),
_1078: (x0,x1) => x0.contains(x1),
_1082: x0 => x0.children,
_1086: x0 => x0.clientHeight,
_1087: x0 => x0.clientWidth,
_1088: x0 => x0.id,
_1089: (x0,x1) => x0.id = x1,
_1092: (x0,x1) => x0.spellcheck = x1,
_1093: x0 => x0.tagName,
_1094: x0 => x0.style,
_1095: (x0,x1) => x0.append(x1),
_1097: x0 => x0.getBoundingClientRect(),
_1101: (x0,x1) => x0.querySelectorAll(x1),
_1103: x0 => x0.remove(),
_1105: (x0,x1,x2) => x0.setAttribute(x1,x2),
_1107: (x0,x1) => x0.removeAttribute(x1),
_1108: (x0,x1) => x0.tabIndex = x1,
_1111: x0 => x0.scrollTop,
_1112: (x0,x1) => x0.scrollTop = x1,
_1113: x0 => x0.scrollLeft,
_1114: (x0,x1) => x0.scrollLeft = x1,
_1115: x0 => x0.classList,
_1116: (x0,x1) => x0.className = x1,
_1123: (x0,x1) => x0.getElementsByClassName(x1),
_1125: x0 => x0.click(),
_1129: (x0,x1) => x0.attachShadow(x1),
_1131: (x0,x1) => x0.getPropertyValue(x1),
_1132: (x0,x1,x2,x3) => x0.setProperty(x1,x2,x3),
_1134: (x0,x1) => x0.removeProperty(x1),
_1136: x0 => x0.offsetLeft,
_1137: x0 => x0.offsetTop,
_1138: x0 => x0.offsetParent,
_1140: (x0,x1) => x0.name = x1,
_1141: x0 => x0.content,
_1142: (x0,x1) => x0.content = x1,
_1145: x0 => x0.src,
_1146: (x0,x1) => x0.src = x1,
_1147: x0 => x0.naturalWidth,
_1148: x0 => x0.naturalHeight,
_1151: x0 => x0.decode(),
_1152: (x0,x1) => x0.src = x1,
_1153: (x0,x1) => x0.nonce = x1,
_1155: (x0,x1) => x0.nonce = x1,
_1157: x0 => x0.sheet,
_1160: x0 => x0.now(),
_1162: (x0,x1) => x0.width = x1,
_1164: (x0,x1) => x0.height = x1,
_1166: (x0,x1) => x0.toDataURL(x1),
_1167: (x0,x1) => x0.getContext(x1),
_1168: (x0,x1,x2) => x0.getContext(x1,x2),
_1169: (x0,x1) => x0.getParameter(x1),
_1170: x0 => x0.SAMPLES,
_1171: x0 => x0.STENCIL_BITS,
_1173: x0 => x0.fillStyle,
_1174: (x0,x1) => x0.fillStyle = x1,
_1175: x0 => x0.font,
_1176: (x0,x1) => x0.font = x1,
_1178: (x0,x1) => x0.direction = x1,
_1179: (x0,x1) => x0.lineWidth = x1,
_1180: (x0,x1) => x0.strokeStyle = x1,
_1181: x0 => x0.strokeStyle,
_1187: (x0,x1,x2,x3,x4) => x0.createLinearGradient(x1,x2,x3,x4),
_1188: (x0,x1,x2) => x0.createPattern(x1,x2),
_1189: (x0,x1,x2,x3,x4,x5,x6) => x0.createRadialGradient(x1,x2,x3,x4,x5,x6),
_1191: x0 => x0.fill(),
_1192: (x0,x1) => x0.fill(x1),
_1193: (x0,x1,x2,x3,x4) => x0.fillRect(x1,x2,x3,x4),
_1194: (x0,x1,x2,x3) => x0.fillText(x1,x2,x3),
_1197: (x0,x1,x2) => x0.lineTo(x1,x2),
_1199: (x0,x1) => x0.measureText(x1),
_1201: (x0,x1,x2) => x0.moveTo(x1,x2),
_1203: x0 => x0.save(),
_1205: (x0,x1,x2,x3,x4) => x0.rect(x1,x2,x3,x4),
_1208: x0 => x0.restore(),
_1210: (x0,x1,x2,x3,x4,x5,x6) => x0.setTransform(x1,x2,x3,x4,x5,x6),
_1211: (x0,x1,x2,x3,x4,x5,x6) => x0.transform(x1,x2,x3,x4,x5,x6),
_1213: x0 => x0.clip(),
_1214: (x0,x1) => x0.clip(x1),
_1215: (x0,x1,x2) => x0.scale(x1,x2),
_1216: (x0,x1,x2,x3,x4) => x0.clearRect(x1,x2,x3,x4),
_1217: (x0,x1,x2) => x0.translate(x1,x2),
_1218: (x0,x1) => x0.rotate(x1),
_1220: (x0,x1,x2,x3,x4,x5,x6) => x0.bezierCurveTo(x1,x2,x3,x4,x5,x6),
_1222: (x0,x1,x2,x3,x4) => x0.quadraticCurveTo(x1,x2,x3,x4),
_1223: (x0,x1) => x0.globalCompositeOperation = x1,
_1224: (x0,x1) => x0.lineCap = x1,
_1225: (x0,x1) => x0.lineJoin = x1,
_1226: (x0,x1) => x0.shadowBlur = x1,
_1227: (x0,x1,x2,x3,x4,x5,x6) => x0.arc(x1,x2,x3,x4,x5,x6),
_1228: (x0,x1) => x0.filter = x1,
_1229: (x0,x1) => x0.shadowOffsetX = x1,
_1230: (x0,x1) => x0.shadowOffsetY = x1,
_1231: (x0,x1) => x0.shadowColor = x1,
_1233: (x0,x1,x2,x3,x4,x5,x6,x7,x8) => x0.ellipse(x1,x2,x3,x4,x5,x6,x7,x8),
_1235: (x0,x1,x2,x3) => x0.strokeText(x1,x2,x3),
_1236: (x0,x1) => x0.globalAlpha = x1,
_1240: x0 => x0.width,
_1241: x0 => x0.height,
_1243: (x0,x1,x2) => x0.addColorStop(x1,x2),
_1244: x0 => x0.status,
_1246: x0 => x0.body,
_1247: x0 => x0.arrayBuffer(),
_1254: x0 => x0.read(),
_1255: x0 => x0.value,
_1256: x0 => x0.done,
_1257: x0 => x0.width,
_1258: x0 => x0.name,
_1259: x0 => x0.x,
_1260: x0 => x0.y,
_1261: x0 => x0.width,
_1262: x0 => x0.height,
_1263: x0 => x0.top,
_1264: x0 => x0.right,
_1265: x0 => x0.bottom,
_1266: x0 => x0.left,
_1267: x0 => x0.load(),
_1270: x0 => x0.status,
_1275: x0 => x0.height,
_1276: x0 => x0.width,
_1277: (x0,x1) => x0.value = x1,
_1280: (x0,x1) => x0.placeholder = x1,
_1281: (x0,x1) => x0.name = x1,
_1282: x0 => x0.selectionDirection,
_1283: x0 => x0.selectionStart,
_1284: x0 => x0.selectionEnd,
_1287: x0 => x0.value,
_1288: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1292: x0 => x0.readText(),
_1293: (x0,x1) => x0.writeText(x1),
_1294: x0 => x0.altKey,
_1295: x0 => x0.code,
_1296: x0 => x0.ctrlKey,
_1297: x0 => x0.key,
_1298: x0 => x0.keyCode,
_1299: x0 => x0.location,
_1300: x0 => x0.metaKey,
_1301: x0 => x0.repeat,
_1302: x0 => x0.shiftKey,
_1303: x0 => x0.isComposing,
_1304: (x0,x1) => x0.getModifierState(x1),
_1305: x0 => x0.state,
_1307: (x0,x1) => x0.go(x1),
_1308: (x0,x1,x2,x3) => x0.pushState(x1,x2,x3),
_1309: (x0,x1,x2,x3) => x0.replaceState(x1,x2,x3),
_1310: x0 => x0.pathname,
_1311: x0 => x0.search,
_1312: x0 => x0.hash,
_1315: x0 => x0.state,
_1316: (x0,x1) => x0.createObjectURL(x1),
_1317: (x0,x1) => x0.revokeObjectURL(x1),
_1319: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1319(f,x0,x1)),
_1321: (x0,x1,x2) => x0.observe(x1,x2),
_1324: x0 => x0.attributeName,
_1325: x0 => x0.type,
_1326: x0 => x0.matches,
_1329: x0 => x0.matches,
_1330: x0 => x0.clientX,
_1331: x0 => x0.clientY,
_1332: x0 => x0.offsetX,
_1333: x0 => x0.offsetY,
_1336: x0 => x0.button,
_1337: x0 => x0.buttons,
_1338: x0 => x0.ctrlKey,
_1339: (x0,x1) => x0.getModifierState(x1),
_1340: x0 => x0.pointerId,
_1341: x0 => x0.pointerType,
_1342: x0 => x0.pressure,
_1343: x0 => x0.tiltX,
_1344: x0 => x0.tiltY,
_1345: x0 => x0.getCoalescedEvents(),
_1346: x0 => x0.deltaX,
_1347: x0 => x0.deltaY,
_1348: x0 => x0.wheelDeltaX,
_1349: x0 => x0.wheelDeltaY,
_1350: x0 => x0.deltaMode,
_1351: x0 => x0.altKey,
_1352: x0 => x0.ctrlKey,
_1353: x0 => x0.metaKey,
_1354: x0 => x0.shiftKey,
_1355: x0 => x0.changedTouches,
_1356: x0 => x0.identifier,
_1357: x0 => x0.clientX,
_1358: x0 => x0.clientY,
_1359: x0 => x0.data,
_1360: (x0,x1) => x0.type = x1,
_1361: (x0,x1) => x0.max = x1,
_1362: (x0,x1) => x0.min = x1,
_1363: (x0,x1) => x0.value = x1,
_1364: x0 => x0.value,
_1365: x0 => x0.disabled,
_1366: (x0,x1) => x0.disabled = x1,
_1367: (x0,x1) => x0.placeholder = x1,
_1368: (x0,x1) => x0.name = x1,
_1369: (x0,x1) => x0.autocomplete = x1,
_1370: x0 => x0.selectionDirection,
_1371: x0 => x0.selectionStart,
_1372: x0 => x0.selectionEnd,
_1376: (x0,x1,x2) => x0.setSelectionRange(x1,x2),
_1384: (x0,x1) => x0.add(x1),
_1387: (x0,x1) => x0.noValidate = x1,
_1388: (x0,x1) => x0.method = x1,
_1389: (x0,x1) => x0.action = x1,
_1392: (x0,x1) => x0.height = x1,
_1393: (x0,x1) => x0.width = x1,
_1394: (x0,x1) => x0.getContext(x1),
_1396: (x0,x1,x2) => x0.getContext(x1,x2),
_1409: x0 => x0.cssRules,
_1411: (x0,x1,x2) => x0.insertRule(x1,x2),
_1413: x0 => x0.orientation,
_1414: x0 => x0.width,
_1415: x0 => x0.height,
_1416: (x0,x1) => x0.lock(x1),
_1432: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1432(f,x0,x1)),
_1436: x0 => x0.contentRect,
_1439: (x0,x1,x2) => x0.createPolicy(x1,x2),
_1440: (x0,x1) => x0.createScriptURL(x1),
_1442: x0 => x0.length,
_1444: (x0,x1) => x0.item(x1),
_1445: x0 => x0.length,
_1446: (x0,x1) => x0.item(x1),
_1447: x0 => x0.iterator,
_1448: x0 => x0.Segmenter,
_1449: x0 => x0.v8BreakIterator,
_1450: (x0,x1) => x0.segment(x1),
_1452: x0 => x0.done,
_1453: x0 => x0.value,
_1454: x0 => x0.index,
_1458: (x0,x1) => x0.adoptText(x1),
_1460: x0 => x0.first(),
_1461: x0 => x0.next(),
_1462: x0 => x0.current(),
_1465: () => globalThis.window.FinalizationRegistry,
_1466: (x0,x1,x2) => x0.register(x1,x2),
_1470: () => globalThis.window.OffscreenCanvas,
_1473: x0 => x0.loader,
_1474: () => globalThis._flutter,
_1475: (x0,x1) => x0.didCreateEngineInitializer(x1),
_1476: (x0,x1,x2) => x0.call(x1,x2),
_1477: () => globalThis.Promise,
_1478: f => finalizeWrapper(f,(x0,x1) => dartInstance.exports._1478(f,x0,x1)),
_1484: () => globalThis.window.ImageDecoder,
_1485: x0 => x0.tracks,
_1489: x0 => x0.image,
_1497: x0 => x0.displayWidth,
_1498: x0 => x0.displayHeight,
_1499: x0 => x0.duration,
_1502: x0 => x0.ready,
_1503: x0 => x0.selectedTrack,
_1504: x0 => x0.repetitionCount,
_1505: x0 => x0.frameCount,
_1546: f => finalizeWrapper(f,x0 => dartInstance.exports._1546(f,x0)),
_1547: f => finalizeWrapper(f,x0 => dartInstance.exports._1547(f,x0))
      };

    const baseImports = {
        dart2wasm: dart2wasm,

  
          Math: Math,
        Date: Date,
        Object: Object,
        Array: Array,
        Reflect: Reflect,
    };
    dartInstance = await WebAssembly.instantiate(await modulePromise, {
        ...baseImports,
        ...(await importObjectPromise),
    });

    return dartInstance;
}

// Call the main function for the instantiated module
// `moduleInstance` is the instantiated dart2wasm module
// `args` are any arguments that should be passed into the main function.
export const invoke = (moduleInstance, ...args) => {
    const dartMain = moduleInstance.exports.$getMain();
    const dartArgs = buildArgsList(args);
    moduleInstance.exports.$invokeMain(dartMain, dartArgs);
}

